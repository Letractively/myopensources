<?php
/*
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2007 Bharat Mediratta
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA  02110-1301, USA.
 */

GalleryCoreApi::requireOnce('modules/search/classes/GallerySearchInterface_1_0.class');

/**
 * This is an implementation of the search module's SearchInterface_1_0
 * @package UserData
 * @subpackage Classes
 * @author Serban Constantinescu <serban.constantinescu@gmail.com>
 * @version $Revision: 15513 $
 */
class UserDataSearch extends GallerySearchInterface_1_0 {
    /**
     * @see GallerySearchInterface_1_0::getSearchModuleInfo
     */
    function getSearchModuleInfo() {
	global $gallery;

	list ($ret, $module) = GalleryCoreApi::loadPlugin('module', 'userdata');
	if ($ret) { return array($ret, null); }

	$info = array('name' => $module->translate('User Data'),
		      'description' => $module->translate('User Data Module'),
		      'options' => array(
			  'userdata' => array(
			      'description' => $module->translate('Search user data'),
			      'enabled' => 1)));
	return array(null, $info);
    }

    /**
     * @see GallerySearchInterface_1_0::search
     */
    function search($options, $criteria, $offset=0, $count=-1) {
	global $gallery;


        // Serban: some errors so return null
//	return array(null, array('start' => 0, 'end' => '0', 'count' => 0, 'results' => array()));


        $userId = $gallery->getActiveUserId();

        list($ret, $allUserGroupId) = GalleryCoreApi::getPluginParameter('module', 'core', 'id.allUserGroup');
	if ($ret) { return array($ret, null); }
	
	list ($ret, $canSearch) = GalleryCoreApi::isUserInGroup($userId, $allUserGroupId);
	if ($ret) { return array($ret, null); }

	if (!$canSearch) {
	    return array(null,
			 array('start' => 0, 'end' => '0',
			       'count' => 0, 'results' => array()));
	}

	$countQuery = '
	SELECT COUNT([UserDataMap::userId])
	FROM [UserDataMap]
	WHERE [UserDataMap::value] LIKE ?
	';

	$query = '
	SELECT
	    [UserDataMap::userId],
	    [UserDataMap::field],
	    [UserDataMap::value],
	    [GalleryUser::fullName],
	    [GalleryUser::userName]
	FROM [UserDataMap], [GalleryUser]
	WHERE [UserDataMap::userId] = [GalleryUser::id] AND
	      [UserDataMap::value] LIKE ?
	ORDER BY [UserDataMap::userId] DESC
	';

	$data[] = '%' . $criteria . '%';

	/* Find the total number of */
	list ($ret, $results) = $gallery->search($countQuery, $data);
	if ($ret) {
	    return array($ret, null);
	}
	$result = $results->nextResult();
	$numRows = (int)$result[0];



	list ($ret, $results) = $gallery->search(
	    $query, $data, array('limit' => array('offset' => $offset, 'count' => $count)));
	if ($ret) {
	    return array($ret, null);
	}

        $text['seeprofile'] = $gallery->i18n('See profile...');
	$text['user'] = $gallery->i18n('User');
	
	
	
        /* Serban, add user photo data */
	$hasPhotoModule = 0;
        list ($ret, $module) = GalleryCoreApi::loadPlugin('module', 'userphoto');
	if (!$ret) {
	    GalleryCoreApi::requireOnce('modules/userphoto/classes/UserPhotoHelper.class');
	    $hasPhotoModule=1;
	}

	$searchResults = array();
	while ($result = $results->nextResult()) {
	    $photo = array();
	    if ($hasPhotoModule) {
	      // load photo for user
              list($ret, $userPhotoId) = UserPhotoHelper::fetchUserPhotoIdByUserId((int)$result[0]);
	      if ($ret) {
	          return array($ret, null);
	      }
	      if (!empty($userPhotoId)) {
		  list ($ret, $photo) = GalleryCoreApi::loadEntitiesById($userPhotoId);
		  if ($ret) { return array($ret, null); }
	      }
	    }
	    
	    $fields = array();
	    $fields[] = array('key' => $text['user'], 'value' => $result[4] . '(' . $result[3] . ')');
	    $fields[] = array('key' => $result[1], 'value' => $result[2]);
	    $searchResults[] = array('itemId' => (int)$result[0],
	                             'customview' => array('view' => 'members.MembersProfile', 'userId' => (int)$result[0]),
				     'customtext' => $text['seeprofile'],
				     'customphoto' => (array)$photo,
		                     'fields' => $fields
				    );
	}

	$data = array('start' => $numRows == 0 ? 0 : $offset+1,
		      'end' => $numRows == 0 ? 0 : $offset + sizeof($searchResults),
		      'count' => $numRows,
		      'results' => $searchResults);
	return array(null, $data);
    }
}
?>
