<?php
/*
 *
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2005 Bharat Mediratta
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
 
/**
 * @package Checkout
 * @version $Revision: 1689 $
 * @author Matthew Turnbull <matthew.turnbull@messagescan.net>
 * @author Jay Hennessy <gallery2-development@elucidos.com>
 * @author Alec Myers <alec@alecmyers.com>
 */

/**
 * Load the parent class
 */
GalleryCoreApi::requireOnce('modules/core/classes/GalleryEntity.class');

/**
 * A GalleryEntity for checkout transactions.
 *
 * @g2 <class-name>GalleryCheckoutTransaction</class-name>
 * @g2 <parent-class-name>GalleryEntity</parent-class-name>
 * @g2 <schema>
 * @g2   <schema-major>1</schema-major>
 * @g2   <schema-minor>15</schema-minor>
 * @g2 </schema>
 * @g2 <requires-id/>
 *
 * @package Checkout
 * @subpackage Classes
 */

class GalleryCheckoutTransaction extends GalleryEntity {

    /*
     * ****************************************
     *                 Members
     * ****************************************
     */

    /**
     * Date of the transaction
     *
     * @g2 <member>
     * @g2   <member-name>date</member-name>
     * @g2   <member-type>INTEGER</member-type>
     * @g2   <indexed/>
     * @g2   <required/>
     * @g2 </member>
     *
     * @var $date
     * @access public
     */
    var $date;
    
   /**
     * Transaction security no
     *
     * @g2 <member>
     * @g2   <member-name>security</member-name>
     * @g2   <member-type>STRING</member-type>
     * @g2   <member-size>SMALL</member-size>
     * @g2   <required/>
     * @g2 </member>
     *
     * @var $security
     * @access public
     */
    var $security;

    /**
     * Id of the buyer (if a registered Gallery user)
     *
     * @g2 <member>
     * @g2   <member-name>buyerId</member-name>
     * @g2   <member-type>INTEGER</member-type>
     * @g2   <member-size>LARGE</member-size>
     * @g2   <required/>
     * @g2 </member>
     *
     * @var $buyerId
     * @access public
     */
    var $buyerId;

    /**
     * Buyer's host name or address
     *
     * @g2 <member>
     * @g2   <member-name>host</member-name>
     * @g2   <member-type>STRING</member-type>
     * @g2   <member-size>MEDIUM</member-size>
     * @g2   <required/>
     * @g2 </member>
     *
     * @var $host
     * @access public
     */
    var $host;
    
    /**
     * Buyer's language
     *
     * @g2 <member>
     * @g2   <member-name>languageCode</member-name>
     * @g2   <member-type>STRING</member-type>
     * @g2   <member-size>SMALL</member-size>
     * @g2 </member>
     *
     * @var $languageCode
     * @access public
     */
    var $languageCode;

    /**
     * Postage amount
     *
     * @g2 <member>
     * @g2   <member-name>postage</member-name>
     * @g2   <member-type>STRING</member-type>
     * @g2   <member-size>SMALL</member-size>
     * @g2 </member>
     *
     * @var $postage
     * @access public
     */
    var $postage;
    
    /**
     * Postage type
     *
     * @g2 <member>
     * @g2   <member-name>postageType</member-name>
     * @g2   <member-type>STRING</member-type>
     * @g2   <member-size>MEDIUM</member-size>
     * @g2 </member>
     *
     * @var $postageType
     * @access public
     */
    var $postageType;
    
    
     /**
     * Discount amount
     *
     * @g2 <member>
     * @g2   <member-name>discount</member-name>
     * @g2   <member-type>STRING</member-type>
     * @g2   <member-size>SMALL</member-size>
     * @g2 </member>
     *
     * @var $discount
     * @access public
     */
    var $discount;
    
    /**
     * Discount description
     *
     * @g2 <member>
     * @g2   <member-name>discountDescription</member-name>
     * @g2   <member-type>STRING</member-type>
     * @g2   <member-size>MEDIUM</member-size>
     * @g2 </member>
     *
     * @var $discountDescription
     * @access public
     */
    var $discountDescription;
    /**
     * Total purchase amount
     *
     * @g2 <member>
     * @g2   <member-name>amount</member-name>
     * @g2   <member-type>STRING</member-type>
     * @g2   <member-size>SMALL</member-size>
     * @g2 </member>
     *
     * @var $amount
     * @access public
     */
    var $amount;

    /**
     * Buyer's first name
     *
     * @g2 <member>
     * @g2   <member-name>firstName</member-name>
     * @g2   <member-type>STRING</member-type>
     * @g2   <member-size>MEDIUM</member-size>
     * @g2 </member>
     *
     * @var $firstName
     * @access public
     */
    var $firstName;

    /**
     * Buyer's last name
     *
     * @g2 <member>
     * @g2   <member-name>lastName</member-name>
     * @g2   <member-type>STRING</member-type>
     * @g2   <member-size>MEDIUM</member-size>
     * @g2 </member>
     *
     * @var $lastName
     * @access public
     */
    var $lastName;

    /**
     * Buyer's email
     *
     * @g2 <member>
     * @g2   <member-name>email</member-name>
     * @g2   <member-type>STRING</member-type>
     * @g2   <member-size>MEDIUM</member-size>
     * @g2 </member>
     *
     * @var $email
     * @access public
     */
    var $email;

    /**
     * Recipient's name
     *
     * @g2 <member>
     * @g2   <member-name>recipientName</member-name>
     * @g2   <member-type>STRING</member-type>
     * @g2   <member-size>MEDIUM</member-size>
     * @g2 </member>
     *
     * @var $recipientName
     * @access public
     */
    var $recipientName;

   /**
     * Telephone number
     *
     * @g2 <member>
     * @g2   <member-name>telephone</member-name>
     * @g2   <member-type>STRING</member-type>
     * @g2   <member-size>MEDIUM</member-size>
     * @g2 </member>
     *
     * @var $telephone
     * @access public
     */
    var $telephone;
    
    /**
     * Delivery address line 1
     *
     * @g2 <member>
     * @g2   <member-name>address1</member-name>
     * @g2   <member-type>STRING</member-type>
     * @g2   <member-size>MEDIUM</member-size>
     * @g2 </member>
     *
     * @var $address1
     * @access public
     */
    var $address1;

    /**
     * Delivery address line 2
     *
     * @g2 <member>
     * @g2   <member-name>address2</member-name>
     * @g2   <member-type>STRING</member-type>
     * @g2   <member-size>MEDIUM</member-size>
     * @g2 </member>
     *
     * @var $address2
     * @access public
     */
    var $address2;

    /**
     * Delivery address line 3
     *
     * @g2 <member>
     * @g2   <member-name>address3</member-name>
     * @g2   <member-type>STRING</member-type>
     * @g2   <member-size>MEDIUM</member-size>
     * @g2 </member>
     *
     * @var $address3
     * @access public
     */
    var $address3;

    /**
     * Delivery address line 4
     *
     * @g2 <member>
     * @g2   <member-name>address4</member-name>
     * @g2   <member-type>STRING</member-type>
     * @g2   <member-size>MEDIUM</member-size>
     * @g2 </member>
     *
     * @var $address4
     * @access public
     */
    var $address4;

    /**
     * Delivery address line 5
     *
     * @g2 <member>
     * @g2   <member-name>address5</member-name>
     * @g2   <member-type>STRING</member-type>
     * @g2   <member-size>MEDIUM</member-size>
     * @g2 </member>
     *
     * @var $address5
     * @access public
     */
    var $address5;

    /**
     * Delivery zip
     *
     * @g2 <member>
     * @g2   <member-name>addressZip</member-name>
     * @g2   <member-type>STRING</member-type>
     * @g2   <member-size>MEDIUM</member-size>
     * @g2 </member>
     *
     * @var $addressZip
     * @access public
     */
    var $addressZip;

    /**
     * Delivery country
     *
     * @g2 <member>
     * @g2   <member-name>addressCountry</member-name>
     * @g2   <member-type>STRING</member-type>
     * @g2   <member-size>MEDIUM</member-size>
     * @g2 </member>
     *
     * @var $addressCountry
     * @access public
     */
    var $addressCountry;

    /**
     * Buyer's comments
     *
     * @g2 <member>
     * @g2   <member-name>custNotes</member-name>
     * @g2   <member-type>TEXT</member-type>
     * @g2 </member>
     *
     * @var $custNotes
     * @access public
     */
    var $custNotes;

    /**
     * Buyer's comments
     *
     * @g2 <member>
     * @g2   <member-name>custComments</member-name>
     * @g2   <member-type>TEXT</member-type>
     * @g2 </member>
     *
     * @var $custComments
     * @access public
     */
    var $custComments;

    /**
     * Payment plugin that processed this order
     *
     * @g2 <member>
     * @g2   <member-name>paymentPlugin</member-name>
     * @g2   <member-type>STRING</member-type>
     * @g2   <member-size>MEDIUM</member-size>
     * @g2 </member>
     *
     * @var $paymentPlugin
     * @access public
     */
    var $paymentPlugin;
   
    
   /**
     * Time set when order is confirmed
     *
     * @g2 <member>
     * @g2   <member-name>timeConfirmed</member-name>
     * @g2   <member-type>INTEGER</member-type>
     * @g2   <required/>
     * @g2 </member>
     *
     * @var $timeConfirmed
     * @access public
     */
    var $timeConfirmed; 
    
    /**
     * Time set when payment plugin completes processing
     *
     * @g2 <member>
     * @g2   <member-name>timePaid</member-name>
     * @g2   <member-type>INTEGER</member-type>
     * @g2   <required/>
     * @g2 </member>
     *
     * @var $timePaid
     * @access public
     */
    var $timePaid;
    
    /**
     * Time set when payment has cleared
     *
     * @g2 <member>
     * @g2   <member-name>timeCleared</member-name>
     * @g2   <member-type>INTEGER</member-type>
     * @g2   <required/>
     * @g2 </member>
     *
     * @var $timeCleared
     * @access public
     */
    var $timeCleared;
    
    /**
     * Time set when order can be fulfilled
     *
     * @g2 <member>
     * @g2   <member-name>timeFulfil</member-name>
     * @g2   <member-type>INTEGER</member-type>
     * @g2   <required/>
     * @g2 </member>
     *
     * @var $timeFulfil
     * @access public
     */
    var $timeFulfil;
    
    /**
     * Time set when order has been fulfilled
     *
     * @g2 <member>
     * @g2   <member-name>timeFulfilled</member-name>
     * @g2   <member-type>INTEGER</member-type>
     * @g2   <required/>
     * @g2 </member>
     *
     * @var $timeFulfilled
     * @access public
     */
    var $timeFulfilled;
    
    /**
     * Time set when the order has been completed and can be archived/deleted
     *
     * @g2 <member>
     * @g2   <member-name>timeCompleted</member-name>
     * @g2   <member-type>INTEGER</member-type>
     * @g2   <required/>
     * @g2 </member>
     *
     * @var $timeCompleted
     * @access public
     */
    var $timeCompleted;
    
    /**
     * Time set when the order is to be placed on Hold - no actions are allowed
     *
     * @g2 <member>
     * @g2   <member-name>timeHold</member-name>
     * @g2   <member-type>INTEGER</member-type>
     * @g2   <required/>
     * @g2 </member>
     *
     * @var $timeHold
     * @access public
     */
    var $timeHold;
    
    /**
     * Time set when there is a problem with the order
     *
     * @g2 <member>
     * @g2   <member-name>timeProblem</member-name>
     * @g2   <member-type>INTEGER</member-type>
     * @g2   <required/>
     * @g2 </member>
     *
     * @var $timeProblem
     * @access public
     */
    var $timeProblem;
    
    /**
     * Time set when a download has last been attempted (cannot know success)
     *
     * @g2 <member>
     * @g2   <member-name>timeDownloaded</member-name>
     * @g2   <member-type>INTEGER</member-type>
     * @g2   <required/>
     * @g2 </member>
     *
     * @var $timeDownloaded
     * @access public
     */
    var $timeDownloaded;

    /**
     * Download attempts made by user
     *
     * @g2 <member>
     * @g2   <member-name>downloadAttempts</member-name>
     * @g2   <member-type>INTEGER</member-type>
     * @g2   <member-size>MEDIUM</member-size>
     * @g2   <required/>
     * @g2 </member>
     *
     * @var $downloadAttempts
     * @access public
     */
    var $downloadAttempts;
    
    /*
     * ****************************************
     *                 Methods
     * ****************************************
     */

    /**
     * @see GalleryEntity::getClassName()
     */
    function getClassName() {
	return 'GalleryCheckoutTransaction';
    }
    
    
    /**
     * Create a new GalleryCheckoutTransaction
     *
     * @param int $parentId the id of the parent GalleryItem
     * @return GalleryStatus a status code
     */
    function create() {
	$ret = parent::create();
	if ($ret) {
	    return $ret;
	}
	$this->setSecurity(uniqid(rand(), true));
 	$this->setdate(time());
 	$this->setDownloadAttempts(0);
	$this->setTimeConfirmed(0);
	$this->setTimePaid(0);
	$this->setTimeCleared(0);
	$this->setTimeFulfil(0);
	$this->setTimeFulfilled(0);
	$this->setTimeCompleted(0);
	$this->setTimeHold(0);
	$this->setTimeProblem(0);
	$this->setTimeDownloaded(0);
	return null;
    }
    
    /**
     * Delete this GalleryEntity.  Delete all of its children also, if it has any.
     * @return GalleryStatus a status code
     */
     
    function delete() {
	global $gallery;
	$storage =& $gallery->getStorage();

	/* Delete any children */
	$query = '
	SELECT
	  [GalleryChildEntity::id]
	FROM
	  [GalleryChildEntity]
	WHERE
	  [GalleryChildEntity::parentId] = ?
	';
	list ($ret, $searchResults) = $gallery->search($query, array($this->getId()));
	if ($ret) {
	    return $ret;
	}

	$i = 0;
	while ($result = $searchResults->nextResult()) {
	    $ret = GalleryCoreApi::deleteEntityById($result[0], 'GalleryChildEntity');
	    /*
	     * Deletes can cascade in interesting ways.  For example, deleting a derivative will
	     * get rid of any other derivatives that are sourced to it, so it's possible that
	     * deleting children here can lead to a MISSING_OBJECT result unless we re-run the
	     * parent/child query each time.  Easier to just ignore the MISSING_OBJECT error
	     * since we only care that it's gone.
	     */
	    if ($ret && !($ret->getErrorCode() & ERROR_MISSING_OBJECT)) {
		return $ret;
	    }
	    if (!(++$i % 30)) {
		$ret = $storage->checkPoint();
		if ($ret) {
		    return $ret;
		}
	    }
	}

	/* Delete myself */
	$ret = parent::delete();
	if ($ret) {
	    return $ret;
	}
    }

    function getDate() {
        return $this->date;
    }

    function setDate($date) {
        $this->date = $date;
    }
    
    function getSecurity() {
        return $this->security;
    }

    function setSecurity($security) {
        $this->security = $security;
    }

    function getBuyerId() {
        return $this->buyerId;
    }

    function setBuyerId($buyerId) {
        $this->buyerId = $buyerId;
    }

    function getHost() {
        return $this->host;
    }

    function setHost($host) {
        $this->host = $host;
    }

    function getLanguageCode() {
        return $this->languageCode;
    }

    function setLanguageCode($languageCode) {
        $this->languageCode = $languageCode;
    }
    
    function getPostage() {
        return $this->postage;
    }

    function setPostage($postage) {
        $this->postage = $postage;
    }
    
    function getPostageType() {
        return $this->postageType;
    }

    function setPostageType($postageType) {
        $this->postageType = $postageType;
    }
    
     function getDiscount() {
        return $this->discount;
    }

    function setDiscount($discount) {
        $this->discount = $discount;
    }
    
    function getDiscountDescription() {
        return $this->discountDescription;
    }

    function setDiscountDescription($discountDescription) {
        $this->discountDescription = $discountDescription;
    }

    function getAmount() {
        return $this->amount;
    }

    function setAmount($amount) {
        $this->amount = $amount;
    }

    function getFirstName() {
        return $this->firstName;
    }

    function setFirstName($firstName) {
        $this->firstName = $firstName;
    }

    function getLastName() {
        return $this->lastName;
    }

    function setLastName($lastName) {
        $this->lastName = $lastName;
    }

    function getEmail() {
        return $this->email;
    }

    function setEmail($email) {
        $this->email = $email;
    }

    function getRecipientName() {
        return $this->recipientName;
    }

    function setRecipientName($recipientName) {
        $this->recipientName = $recipientName;
    }

    function getTelephone() {
        return $this->telephone;
    }

    function setTelephone($telephone) {
        $this->telephone = $telephone;
    }
    
    function getAddress1() {
        return $this->address1;
    }

    function setAddress1($address1) {
        $this->address1 = $address1;
    }

    function getAddress2() {
        return $this->address2;
    }

    function setAddress2($address2) {
        $this->address2 = $address2;
    }

    function getAddress3() {
        return $this->address3;
    }

    function setAddress3($address3) {
        $this->address3 = $address3;
    }

    function getAddress4() {
        return $this->address4;
    }

    function setAddress4($address4) {
        $this->address4 = $address4;
    }

    function getAddress5() {
        return $this->address5;
    }

    function setAddress5($address5) {
        $this->address5 = $address5;
    }

    function getAddressZip() {
        return $this->addressZip;
    }

    function setAddressZip($addressZip) {
        $this->addressZip = $addressZip;
    }

    function getAddressCountry() {
        return $this->addressCountry;
    }

    function setAddressCountry($addressCountry) {
        $this->addressCountry = $addressCountry;
    }

    function getCustNotes() {
        return $this->custNotes;
    }

    function setCustNotes($custNotes) {
        $this->custNotes = $custNotes;
    }
    
    function appendCustNotes($custNotes) {
        $this->custNotes .= ' ' . $custNotes;
    }

    function getCustComments() {
        return $this->custComments;
    }

    function setCustComments($custComments) {
        $this->custComments = $custComments;
    }
    
    function appendCustComments($custComments) {
        $this->custComments .= ' ' . $custComments;
    }

    function getPaymentPlugin() {
        return $this->paymentPlugin;
    }

    function setPaymentPlugin($paymentPlugin) {
        $this->paymentPlugin = $paymentPlugin;
    }

    function getTimeConfirmed() {
        return $this->timeConfirmed;
    }

    /* Legacy function for backwards compatibility */ 
    function getFlagConfirmed() {
        return ($this->timeConfirmed > 0);
    }
    
    function setTimeConfirmed($timeConfirmed) {
        $this->timeConfirmed = $timeConfirmed;
    }
    
    function getTimePaid() {
        return $this->timePaid;
    }
    
    /* Legacy function for backwards compatibility */ 
    function getFlagPaid() {
    	return ($this->timePaid > 0);
    }
    
    function setTimePaid($timePaid) {
        $this->timePaid = $timePaid;
    }

    function getTimeCleared() {
        return $this->timeCleared;
    }
    
    /* Legacy function for backwards compatibility */ 
    function getFlagCleared() {
        return ($this->timeCleared > 0);
    }

    function setTimeCleared($timeCleared) {
        $this->timeCleared = $timeCleared;
    }

    function getTimeFulfil() {
        return $this->timeFulfil;
    }
    
    /* Legacy function for backwards compatibility */ 
    function getFlagFulfil() {
        return ($this->timeFulfil > 0);
    }

    function setTimeFulfil($timeFulfil) {
        $this->timeFulfil = $timeFulfil;
    }

    function getTimeFulfilled() {
        return $this->timeFulfilled;
    }

    /* Legacy function for backwards compatibility */ 
    function getFlagFulfilled() {
        return ($this->timeFulfilled > 0);
    }
    
    function setTimeFulfilled($timeFulfilled) {
        $this->timeFulfilled = $timeFulfilled;
    }

    function getTimeCompleted() {
        return $this->timeCompleted;
    }
    
    /* Legacy function for backwards compatibility */ 
    function getFlagCompleted() {
        return ($this->timeCompleted > 0);
    }

    function setTimeCompleted($timeCompleted) {
        $this->timeCompleted = $timeCompleted;
    }

    function getTimeHold() {
        return $this->timeHold;
    }
    
    /* Legacy function for backwards compatibility */ 
    function getFlagHold() {
        return ($this->timeHold > 0);
    }

    function setTimeHold($timeHold) {
        $this->timeHold = $timeHold;
    }

    function getTimeProblem() {
        return $this->timeProblem;
    }

    /* Legacy function for backwards compatibility */   
    function getFlagProblem() {
        return ($this->timeProblem > 0);
    }

    function setTimeProblem($timeProblem) {
        $this->timeProblem = $timeProblem;
    }

    function getTimeDownloaded() {
        return $this->timeDownloaded;
    }
    
    /* Legacy function for backwards compatibility */    
    function getFlagDownloaded() {
        return ($this->timeDownloaded> 0);
    }

    function setTimeDownloaded($timeDownloaded) {
        $this->timeDownloaded = $timeDownloaded;
    }

    /* Legacy function for backwards compatibility */
    function setFlagDownloaded($flagDownloaded) {
        if ($flagDownloaded) {
            $this->timeDownloaded = 0;
        } else {
            $this->timeDownloaded = time();
        }
    }
    
    function getDownloadAttempts() {
        return $this->downloadAttempts;
    }

    function setDownloadAttempts($numAttempts) {
        $this->downloadAttempts = $numAttempts;
    }

}
?>
